@model IEnumerable<TerritoryResponse>
@{
    ViewBag.Title = "Guard - Index";
    ViewBag.CurrentUrl = "~/Guard/Index";
}
<form asp-controller="Owner" asp-action="Index" method="get">
    <!--breadcrumb starts-->
    <div class="flex">
        <div class="flex-1">
            <div class="text-grey">
                <span>Guard Page</span>
                <i class="fa-solid fa-caret-right"></i>
                <span class="text-grey">Territories in which assigned</span>
            </div>
        </div>
    </div>
    <!--breadcrumb ends-->
    <div class="table-container">
        <div class="flex">
            <div class="flex-1">
                <h1>Territories</h1>
            </div>
            <div class="flex-3 text-right">
                <label>Search by:</label>
                <select class="search-dropdown" name="searchBy" style="width:200px">
                    @foreach (var field in ViewBag.SearchFields)
                    {
                        if (field.Key == ViewBag.CurrentSearchBy)
                        {
                            <option value="@field.Key" selected="selected">@field.Value</option>
                        }
                        <option value="@field.Key">@field.Value</option>
                    }
                    @* Eg: searchBy=PersonName&searchString=abc *@
                </select>
                <input type="search" id="Search" class="search-text" placeholder="Search" name="searchString" value="@ViewBag.CurrentSearchString" style="width:200px" />

                <button class="search-button">Search</button>
                <a asp-controller="Owner" asp-action="Index" class="ml link-hover">Clear all</a>
            </div>
        </div>



        <table class="table w-100 mt persons">
            <thead>
                <tr>
                    @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                    {"ColumnName", nameof(TerritoryResponse.Name)},
                    {"DisplayName", "Name"},
                    })
                    @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                    {"ColumnName", nameof(TerritoryResponse.Square)},
                    {"DisplayName", "Square"},
                    })
                    @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                    {"ColumnName", nameof(TerritoryResponse.Description)},
                    {"DisplayName", "Description"},
                    })
                    @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                    {"ColumnName", nameof(TerritoryResponse.Type)},
                    {"DisplayName", "Type"},
                    })
                    <th>Options</th>

                </tr>
            </thead>
            <tbody>
                @foreach (TerritoryResponse territory in Model)
                {
                    <tr>
                        <td style="width:15%">@territory.Name</td>
                        <td style="width:10%">@territory.Square</td>
                        <td style="width:30%">@territory.Description</td>
                        <td style="width:6%">@territory.Type</td>
                        <td style="width:15%">
                            <a asp-controller="Guard" asp-action="ViewOrderDetails" asp-route-territoryID="@territory.Id" class="button-link button-blue-back">Details</a>
                            <a asp-controller="Guard" asp-action="ViewReports" asp-route-territoryID="@territory.Id" class="button-link button-blue-back">Reports</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

</form>